module java.time.Temporal where


data Temporal = pure native java.time.temporal.Temporal where

  pure native isSupported :: Temporal -> TemporalUnit -> Bool

  pure native minus :: Temporal -> Long -> TemporalUnit -> Temporal
                     | Temporal -> TemporalAmount -> Temporal

  pure native plus :: Temporal -> Long -> TemporalUnit -> Temporal
                    | Temporal -> TemporalAmount -> Temporal

  pure native until :: Temporal -> Temporal -> TemporalUnit -> Long

  pure native with :: Temporal -> TemporalField -> Long -> Temporal
                    | Temporal -> TemporalAdjuster -> Temporal



data TemporalAccessor = pure native java.time.temporal.TemporalAccessor where

  pure native get :: TemporalAccessor -> TemporalField -> Int

  pure native getLong :: TemporalAccessor -> TemporalField -> Long

  pure native isSupported :: TemporalAccessor -> TemporalField -> Bool

  pure native query :: TemporalAccessor -> TemporalQuery r -> r

  pure native range :: TemporalAccessor -> TemporalField -> ValueRange


import java.Util
import java.time.Format

data TemporalField = pure native java.time.temporal.TemporalField where

  pure native adjustInto :: TemporalField -> r -> Long -> r

  pure native getBaseUnit :: TemporalField -> TemporalUnit

  pure native getDisplayName :: TemporalField -> Locale -> String

  pure native getFrom :: TemporalField -> TemporalAccessor -> Long

  pure native getRangeUnit :: TemporalField -> TemporalUnit

  pure native isDateBased :: TemporalField -> Bool

  pure native isSupportedBy :: TemporalField -> TemporalAccessor -> Bool

  pure native isTimeBased :: TemporalField -> Bool

  pure native range :: TemporalField -> ValueRange

  pure native rangeRefinedBy :: TemporalField -> TemporalAccessor -> ValueRange

  native resolve :: TemporalField -> Mutable s (Map TemporalField Long) -> TemporalAccessor -> ResolverStyle -> ST s TemporalAccessor

  pure native toString :: TemporalField -> String


import java.Time

data TemporalUnit = pure native java.time.temporal.TemporalUnit where

  pure native addTo :: TemporalUnit -> r -> Long -> r

  pure native between :: TemporalUnit -> Temporal -> Temporal -> Long

  pure native getDuration :: TemporalUnit -> Duration

  pure native isDateBased :: TemporalUnit -> Bool

  pure native isDurationEstimated :: TemporalUnit -> Bool

  pure native isSupportedBy :: TemporalUnit -> Temporal -> Bool

  pure native isTimeBased :: TemporalUnit -> Bool

  pure native toString :: TemporalUnit -> String


import java.Util

data TemporalAmount = pure native java.time.temporal.TemporalAmount where

  pure native addTo :: TemporalAmount -> Temporal -> Temporal

  pure native get :: TemporalAmount -> TemporalUnit -> Long

  native getUnits :: TemporalAmount -> STMutable s (List TemporalUnit)

  pure native subtractFrom :: TemporalAmount -> Temporal -> Temporal



data ValueRange = pure native java.time.temporal.ValueRange where

  pure native checkValidIntValue :: ValueRange -> Long -> TemporalField -> Int

  pure native checkValidValue :: ValueRange -> Long -> TemporalField -> Long

  pure native equals :: ValueRange -> Object -> Bool

  pure native getLargestMinimum :: ValueRange -> Long

  pure native getMaximum :: ValueRange -> Long

  pure native getMinimum :: ValueRange -> Long

  pure native getSmallestMaximum :: ValueRange -> Long

  pure native hashCode :: ValueRange -> Int

  pure native isFixed :: ValueRange -> Bool

  pure native isIntValue :: ValueRange -> Bool

  pure native isValidIntValue :: ValueRange -> Long -> Bool

  pure native isValidValue :: ValueRange -> Long -> Bool

  pure native jof' "java.time.temporal.ValueRange.of" :: Long -> Long -> ValueRange
                                                       | Long -> Long -> Long -> ValueRange
                                                       | Long -> Long -> Long -> Long -> ValueRange

  pure native toString :: ValueRange -> String

derive Serializable ValueRange


data TemporalAdjuster = pure native java.time.temporal.TemporalAdjuster where

  pure native adjustInto :: TemporalAdjuster -> Temporal -> Temporal



data TemporalQuery r = pure native java.time.temporal.TemporalQuery where

  pure native queryFrom :: TemporalQuery r -> TemporalAccessor -> r


import java.Util

data ChronoField = pure native java.time.temporal.ChronoField where

  pure native nano_of_second "java.time.temporal.ChronoField.NANO_OF_SECOND" :: ChronoField
  pure native nano_of_day "java.time.temporal.ChronoField.NANO_OF_DAY" :: ChronoField
  pure native micro_of_second "java.time.temporal.ChronoField.MICRO_OF_SECOND" :: ChronoField
  pure native micro_of_day "java.time.temporal.ChronoField.MICRO_OF_DAY" :: ChronoField
  pure native milli_of_second "java.time.temporal.ChronoField.MILLI_OF_SECOND" :: ChronoField
  pure native milli_of_day "java.time.temporal.ChronoField.MILLI_OF_DAY" :: ChronoField
  pure native second_of_minute "java.time.temporal.ChronoField.SECOND_OF_MINUTE" :: ChronoField
  pure native second_of_day "java.time.temporal.ChronoField.SECOND_OF_DAY" :: ChronoField
  pure native minute_of_hour "java.time.temporal.ChronoField.MINUTE_OF_HOUR" :: ChronoField
  pure native minute_of_day "java.time.temporal.ChronoField.MINUTE_OF_DAY" :: ChronoField
  pure native hour_of_ampm "java.time.temporal.ChronoField.HOUR_OF_AMPM" :: ChronoField
  pure native clock_hour_of_ampm "java.time.temporal.ChronoField.CLOCK_HOUR_OF_AMPM" :: ChronoField
  pure native hour_of_day "java.time.temporal.ChronoField.HOUR_OF_DAY" :: ChronoField
  pure native clock_hour_of_day "java.time.temporal.ChronoField.CLOCK_HOUR_OF_DAY" :: ChronoField
  pure native ampm_of_day "java.time.temporal.ChronoField.AMPM_OF_DAY" :: ChronoField
  pure native day_of_week "java.time.temporal.ChronoField.DAY_OF_WEEK" :: ChronoField
  pure native aligned_day_of_week_in_month "java.time.temporal.ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH" :: ChronoField
  pure native aligned_day_of_week_in_year "java.time.temporal.ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR" :: ChronoField
  pure native day_of_month "java.time.temporal.ChronoField.DAY_OF_MONTH" :: ChronoField
  pure native day_of_year "java.time.temporal.ChronoField.DAY_OF_YEAR" :: ChronoField
  pure native epoch_day "java.time.temporal.ChronoField.EPOCH_DAY" :: ChronoField
  pure native aligned_week_of_month "java.time.temporal.ChronoField.ALIGNED_WEEK_OF_MONTH" :: ChronoField
  pure native aligned_week_of_year "java.time.temporal.ChronoField.ALIGNED_WEEK_OF_YEAR" :: ChronoField
  pure native month_of_year "java.time.temporal.ChronoField.MONTH_OF_YEAR" :: ChronoField
  pure native proleptic_month "java.time.temporal.ChronoField.PROLEPTIC_MONTH" :: ChronoField
  pure native year_of_era "java.time.temporal.ChronoField.YEAR_OF_ERA" :: ChronoField
  pure native year "java.time.temporal.ChronoField.YEAR" :: ChronoField
  pure native era "java.time.temporal.ChronoField.ERA" :: ChronoField
  pure native instant_seconds "java.time.temporal.ChronoField.INSTANT_SECONDS" :: ChronoField
  pure native offset_seconds "java.time.temporal.ChronoField.OFFSET_SECONDS" :: ChronoField

  pure native adjustInto :: ChronoField -> r -> Long -> r

  pure native checkValidIntValue :: ChronoField -> Long -> Int

  pure native checkValidValue :: ChronoField -> Long -> Long

  pure native getBaseUnit :: ChronoField -> TemporalUnit

  pure native getDisplayName :: ChronoField -> Locale -> String

  pure native getFrom :: ChronoField -> TemporalAccessor -> Long

  pure native getRangeUnit :: ChronoField -> TemporalUnit

  pure native isDateBased :: ChronoField -> Bool

  pure native isSupportedBy :: ChronoField -> TemporalAccessor -> Bool

  pure native isTimeBased :: ChronoField -> Bool

  pure native range :: ChronoField -> ValueRange

  pure native rangeRefinedBy :: ChronoField -> TemporalAccessor -> ValueRange

  pure native toString :: ChronoField -> String

  pure native valueOf "java.time.temporal.ChronoField.valueOf" :: String -> ChronoField

  native values "java.time.temporal.ChronoField.values" :: () -> STMutable s (JArray ChronoField)

derive Serializable ChronoField

